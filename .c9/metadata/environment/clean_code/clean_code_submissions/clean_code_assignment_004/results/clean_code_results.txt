{"filter":false,"title":"clean_code_results.txt","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_004/results/clean_code_results.txt","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":1,"column":35},"end":{"row":342,"column":50},"action":"remove","lines":["4: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/get_post_details.py:9: [E1101(no-member), get_post] Class 'Comment' has no 'objects' member","fb_post/utils/get_post_details.py:12: [E1101(no-member), get_post] Class 'Post' has no 'objects' member","fb_post/utils/get_post_details.py:36: [E1101(no-member), get_post_objs_of_a_user] Class 'Comment' has no 'objects' member","fb_post/utils/get_post_details.py:38: [E1101(no-member), get_post_objs_of_a_user] Class 'Post' has no 'objects' member","fb_post/utils/get_post_details.py:60: [W2207(max-for-block-size), get_post_details_dict] Too many statements in for block (5/4)","fb_post/utils/get_post_details.py:97: [W2207(max-for-block-size), get_comment_dict_with_all_details] Too many statements in for block (7/4)","fb_post/utils/get_post_details.py:122: [R1702(too-many-nested-blocks), add_reply_details_dict_to_replies_list] Too many nested blocks (3/2)","fb_post/utils/get_post_details.py:124: [W0612(unused-variable), add_reply_details_dict_to_replies_list] Unused variable 'reaction_dict'","fb_post/utils/get_post_details.py:168: [E1101(no-member), get_reactions_to_post] Class 'Reaction' has no 'objects' member","************* Module fb_post.utils.get_replies_to_comment","fb_post/utils/get_replies_to_comment.py:9: [E1101(no-member), get_replies_for_comment] Class 'Comment' has no 'objects' member","************* Module fb_post.utils..~c9_invoke_ykVj7Z","fb_post/utils/.~c9_invoke_ykVj7Z.py:122: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/.~c9_invoke_ykVj7Z.py:1: [C0103(invalid-name), ] Module name \"~c9_invoke_ykVj7Z\" doesn't conform to snake_case naming style","fb_post/utils/.~c9_invoke_ykVj7Z.py:8: [E1101(no-member), get_post] Class 'Comment' has no 'objects' member","fb_post/utils/.~c9_invoke_ykVj7Z.py:11: [E1101(no-member), get_post] Class 'Post' has no 'objects' member","fb_post/utils/.~c9_invoke_ykVj7Z.py:30: [E1101(no-member), get_post_objs_of_a_user] Class 'Comment' has no 'objects' member","fb_post/utils/.~c9_invoke_ykVj7Z.py:32: [E1101(no-member), get_post_objs_of_a_user] Class 'Post' has no 'objects' member","fb_post/utils/.~c9_invoke_ykVj7Z.py:114: [R1702(too-many-nested-blocks), prepare_reply_details_dict] Too many nested blocks (3/2)","fb_post/utils/.~c9_invoke_ykVj7Z.py:137: [E1101(no-member), get_reactions_to_post] Class 'Reaction' has no 'objects' member","fb_post/utils/.~c9_invoke_ykVj7Z.py:157: [E1101(no-member), get_replies_for_comment] Class 'Comment' has no 'objects' member","************* Module fb_post.utils.validation","fb_post/utils/validation.py:2: [C0330(bad-continuation), ] Wrong hanging indentation (remove 28 spaces).","                                InvalidUserException, InvalidPostException,","    |                           ^","fb_post/utils/validation.py:3: [C0330(bad-continuation), ] Wrong hanging indentation (remove 28 spaces).","                                InvalidCommentException, InvalidCommentContent,","    |                           ^","fb_post/utils/validation.py:4: [C0330(bad-continuation), ] Wrong hanging indentation (remove 28 spaces).","                                InvalidPostContent, InvalidReplyContent,","    |                           ^","fb_post/utils/validation.py:5: [C0330(bad-continuation), ] Wrong hanging indentation (remove 28 spaces).","                                InvalidReactionTypeException","    |                           ^","fb_post/utils/validation.py:6: [C0330(bad-continuation), ] Wrong hanging indentation.","                               )","|   |                          ^","fb_post/utils/validation.py:12: [E1101(no-member), check_for_user] Class 'User' has no 'objects' member","fb_post/utils/validation.py:14: [E1101(no-member), check_for_user] Class 'User' has no 'DoesNotExist' member","fb_post/utils/validation.py:21: [E1101(no-member), check_for_post] Class 'Post' has no 'objects' member","fb_post/utils/validation.py:23: [E1101(no-member), check_for_post] Class 'Post' has no 'DoesNotExist' member","fb_post/utils/validation.py:30: [E1101(no-member), check_for_comment] Class 'Comment' has no 'objects' member","fb_post/utils/validation.py:32: [E1101(no-member), check_for_comment] Class 'Comment' has no 'DoesNotExist' member","************* Module fb_post.utils.create_post","fb_post/utils/create_post.py:9: [E1101(no-member), create_post] Class 'Post' has no 'objects' member","************* Module fb_post.utils.post_predictions","fb_post/utils/post_predictions.py:23: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/post_predictions.py:25: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/post_predictions.py:7: [E1101(no-member), get_total_reaction_count] Class 'Reaction' has no 'objects' member","fb_post/utils/post_predictions.py:13: [E1101(no-member), get_reaction_metrics] Class 'Reaction' has no 'objects' member","fb_post/utils/post_predictions.py:28: [E1101(no-member), get_posts_with_more_positive_reactions] Class 'Reaction' has no 'objects' member","fb_post/utils/post_predictions.py:42: [E1101(no-member), get_posts_reacted_by_user] Class 'Reaction' has no 'objects' member","fb_post/utils/post_predictions.py:4: [C0411(wrong-import-order), ] first party import \"from fb_post.constants import PositiveReactions, NegativeReactions\" should be placed before \"from .validation import check_for_post, check_for_user\"","************* Module fb_post.utils.reply_to_comment","fb_post/utils/reply_to_comment.py:24: [C0303(trailing-whitespace), ] Trailing whitespace","fb_post/utils/reply_to_comment.py:9: [E1101(no-member), reply_to_comment] Class 'Comment' has no 'objects' member","fb_post/utils/reply_to_comment.py:14: [E1101(no-member), reply_to_comment] Class 'Comment' has no 'DoesNotExist' member","fb_post/utils/reply_to_comment.py:28: [E1101(no-member), comment_creation] Class 'Comment' has no 'objects' member","fb_post/utils/reply_to_comment.py:34: [E1101(no-member), comment_creation] Class 'Comment' has no 'objects' member","************* Module fb_post.utils.create_comment","fb_post/utils/create_comment.py:10: [E1101(no-member), create_comment] Class 'Comment' has no 'objects' member","************* Module fb_post.utils..~c9_invoke_k5swzK","fb_post/utils/.~c9_invoke_k5swzK.py:1: [C0103(invalid-name), ] Module name \"~c9_invoke_k5swzK\" doesn't conform to snake_case naming style","fb_post/utils/.~c9_invoke_k5swzK.py:6: [W0717(too-many-try-statements), reply_to_comment] try clause contains 4 statements, expected at most 2","fb_post/utils/.~c9_invoke_k5swzK.py:9: [E1101(no-member), reply_to_comment] Class 'Comment' has no 'objects' member","fb_post/utils/.~c9_invoke_k5swzK.py:16: [E1101(no-member), reply_to_comment] Class 'Comment' has no 'DoesNotExist' member","fb_post/utils/.~c9_invoke_k5swzK.py:23: [E1101(no-member), comment_creation] Class 'Comment' has no 'objects' member","fb_post/utils/.~c9_invoke_k5swzK.py:29: [E1101(no-member), comment_creation] Class 'Comment' has no 'objects' member","************* Module fb_post.utils.react_to_post","fb_post/utils/react_to_post.py:7: [W0717(too-many-try-statements), react_to_post] try clause contains 4 statements, expected at most 2","fb_post/utils/react_to_post.py:12: [E1101(no-member), react_to_post] Class 'Reaction' has no 'objects' member","fb_post/utils/react_to_post.py:16: [E1101(no-member), react_to_post] Class 'Reaction' has no 'DoesNotExist' member","fb_post/utils/react_to_post.py:17: [E1101(no-member), react_to_post] Class 'Reaction' has no 'objects' member","************* Module fb_post.utils..~c9_invoke_Bkm10","fb_post/utils/.~c9_invoke_Bkm10.py:1: [C0103(invalid-name), ] Module name \"~c9_invoke_Bkm10\" doesn't conform to snake_case naming style","************* Module fb_post.utils.react_to_comment","fb_post/utils/react_to_comment.py:11: [E1101(no-member), react_to_comment] Class 'Reaction' has no 'objects' member","fb_post/utils/react_to_comment.py:14: [E1101(no-member), react_to_comment] Class 'Reaction' has no 'DoesNotExist' member","fb_post/utils/react_to_comment.py:15: [E1101(no-member), react_to_comment] Class 'Reaction' has no 'objects' member","************* Module fb_post.utils..~c9_invoke_BqRQTu","fb_post/utils/.~c9_invoke_BqRQTu.py:101: [C0303(trailing-whitespace), ] Trailing whitespace","fb_post/utils/.~c9_invoke_BqRQTu.py:102: [C0330(bad-continuation), ] Wrong continued indentation (add 11 spaces).","                                                    comment, replies_list","                                                    ^          |","fb_post/utils/.~c9_invoke_BqRQTu.py:103: [C0330(bad-continuation), ] Wrong continued indentation.","                                    ) for reply in post_comments]","                                    ^                         ||","fb_post/utils/.~c9_invoke_BqRQTu.py:141: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/.~c9_invoke_BqRQTu.py:1: [C0103(invalid-name), ] Module name \"~c9_invoke_BqRQTu\" doesn't conform to snake_case naming style","fb_post/utils/.~c9_invoke_BqRQTu.py:9: [E1101(no-member), get_post] Class 'Comment' has no 'objects' member","fb_post/utils/.~c9_invoke_BqRQTu.py:12: [E1101(no-member), get_post] Class 'Post' has no 'objects' member","fb_post/utils/.~c9_invoke_BqRQTu.py:36: [E1101(no-member), get_post_objs_of_a_user] Class 'Comment' has no 'objects' member","fb_post/utils/.~c9_invoke_BqRQTu.py:38: [E1101(no-member), get_post_objs_of_a_user] Class 'Post' has no 'objects' member","fb_post/utils/.~c9_invoke_BqRQTu.py:96: [W2207(max-for-block-size), get_comment_dict] Too many statements in for block (7/4)","fb_post/utils/.~c9_invoke_BqRQTu.py:131: [R1702(too-many-nested-blocks), add_reply_details_dict_to_replies_list] Too many nested blocks (3/2)","fb_post/utils/.~c9_invoke_BqRQTu.py:168: [E1101(no-member), get_reactions_to_post] Class 'Reaction' has no 'objects' member","************* Module fb_post.utils..~c9_invoke_N0tIG6","fb_post/utils/.~c9_invoke_N0tIG6.py:8: [E0001(syntax-error), ] invalid syntax (<unknown>, line 8)","************* Module fb_post/constants","fb_post/constants.py:23: [C0304(missing-final-newline), ] Final newline missing","fb_post/constants.py:1: [C0103(invalid-name), ] Module name \"fb_post/constants\" doesn't conform to snake_case naming style","************* Module fb_post/exceptions","fb_post/exceptions.py:1: [C0103(invalid-name), ] Module name \"fb_post/exceptions\" doesn't conform to snake_case naming style","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_BqRQTu:0","==fb_post.utils.get_post_details:0","from django.db.models import Prefetch","from fb_post.models import Post, Comment, Reaction","from .validation import check_for_user, check_for_post","","def get_post(post_id):","","    check_for_post(post_id)","","    queryset = Comment.objects.filter(post_id=post_id).\\","                    select_related('commented_by')","","    post_object = Post.objects\\","                .prefetch_related(","                    'reactions',","                    Prefetch('comments',","                             queryset=queryset,","                             to_attr='post_comments'),","                    'post_comments__reactions'","                ).select_related('posted_by').get(id=post_id)","","    return get_post_details_dict(post_object)","","","def get_user_posts(user_id):","","    check_for_user(user_id)","","    post_objects = get_post_objs_of_a_user(user_id)","","    posts_list = [get_post_details_dict(post) for post in post_objects]","","    return posts_list","","def get_post_objs_of_a_user(user_id):","","    queryset = Comment.objects.all().select_related('commented_by')","","    posts = Post.objects.filter(posted_by_id=user_id).\\","                prefetch_related(","                    'reactions',","                    Prefetch('comments',","                             queryset=queryset,","                             to_attr='post_comments'),","                    'post_comments__reactions'","                ).select_related('posted_by')","","    return posts","","def get_post_details_dict(post):","","    post_dict = {}","    comment_list, post_reactions_list = [], []","    post_dict = construct_post_details_dict(post, post_reactions_list,","                                            comment_list)","","    for react in post.reactions.all():","        if react.reaction not in post_reactions_list:","            post_reactions_list.append(react.reaction)","","    for comment in post.post_comments:","        is_comment = not comment.parent_comment_id","        if is_comment:","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_BqRQTu:154","==fb_post.utils.get_post_details:154","def get_user_dict(user):","    user_dict = {","        \"user_id\": user.id,","        \"name\": user.name,","        \"profile_pic\": user.profile_pic","    }","    return user_dict","","","def get_reactions_to_post(post_id):","","    check_for_post(post_id)","","    reactions = Reaction.objects.filter(post_id=post_id)\\","                    .select_related('reacted_by').distinct()","","    reactions_list = [get_user_dict_of_reaction(react) for react in reactions]","","    return reactions_list","","def get_user_dict_of_reaction(reaction):","","    reacted_user_dict = get_user_dict(reaction.reacted_by)","    reacted_user_dict[\"reaction\"] = reaction.reaction","","    return reacted_user_dict","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_BqRQTu:63","==fb_post.utils.get_post_details:64","            comment_list.append(comment_dict)","","    post_dict[\"comments_count\"] = len(comment_list)","","    return post_dict","","def construct_post_details_dict(post, post_reactions_list, comment_list):","","    post_details_dict = {","        \"post_id\": post.id,","        \"posted_by\": {","            \"name\": post.posted_by.name,","            \"user_id\": post.posted_by_id,","            \"profile_pic\": post.posted_by.profile_pic","        },","        \"posted_at\": post.posted_at.strftime(\"%Y-%m-%d %H:%M:%S.%f\"),","        \"post_content\": post.content,","        \"reactions\": {","            \"count\": len(post.reactions.all()),","            \"type\": post_reactions_list","        },","        \"comments\": comment_list,","    }","","    return post_details_dict","","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_BqRQTu:125","==fb_post.utils.get_post_details:116","    return comment_dict","","def add_reply_details_dict_to_replies_list(reply, comment, replies_list):","","    is_reply = comment.id is reply.parent_comment_id","    if is_reply:","        reply_reaction_list = []","        reaction_dict = {","            \"count\": len(reply.reactions.all()),","            \"type\": reply_reaction_list","        }","","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_k5swzK:22","==fb_post.utils.reply_to_comment:27","        reply_id = Comment.objects.create(content=reply_content,","                                          commented_by_id=user_id,","                                          parent_comment_id=parent_comment_id,","                                          post_id=comment.post_id).id","        return reply_id","","    comment_id = Comment.objects.create(content=reply_content,","                                        commented_by_id=user_id,","                                        parent_comment_id=comment_id,","                                        post_id=comment.post_id).id","    return comment_id","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 3 files","==fb_post.utils..~c9_invoke_BqRQTu:72","==fb_post.utils..~c9_invoke_ykVj7Z:53","==fb_post.utils.get_post_details:73","        \"post_id\": post.id,","        \"posted_by\": {","            \"name\": post.posted_by.name,","            \"user_id\": post.posted_by_id,","            \"profile_pic\": post.posted_by.profile_pic","        },","        \"posted_at\": post.posted_at.strftime(\"%Y-%m-%d %H:%M:%S.%f\"),","        \"post_content\": post.content,","        \"reactions\": {","            \"count\": len(post.reactions.all()),","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_BqRQTu:115","==fb_post.utils..~c9_invoke_ykVj7Z:101","        \"commented_at\": commented_time,","        \"comment_content\": comment.content,","        \"reactions\": {","            \"count\": len(comment.reactions.all()),","            \"type\": comment_reaction","        },","        \"replies_count\": len(reply_list),","        \"replies\": reply_list","    }","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_k5swzK:0","==fb_post.utils.reply_to_comment:0","from fb_post.models import Comment","from fb_post.exceptions import InvalidCommentException","from .validation import check_for_user, is_valid_reply_content","","def reply_to_comment(user_id, comment_id, reply_content):","    try:","        check_for_user(user_id)","","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 3 files","==fb_post.utils..~c9_invoke_BqRQTu:35","==fb_post.utils..~c9_invoke_ykVj7Z:29","==fb_post.utils.get_post_details:35","    queryset = Comment.objects.all().select_related('commented_by')","","    posts = Post.objects.filter(posted_by_id=user_id).\\","        prefetch_related(","            'reactions',","            Prefetch('comments',","                     queryset=queryset,","                     to_attr='post_comments'),","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_Bkm10:0","==fb_post.utils.delete_post:0","from fb_post.exceptions import UserCannotDeletePostException","from .validation import check_for_post, check_for_user","","def delete_post(user_id, post_id):","    post = check_for_post(post_id)","    check_for_user(user_id)","","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_ykVj7Z:171","==fb_post.utils.get_replies_to_comment:29","    reply_dict = {","        \"comment_id\": reply.id,","        \"commenter\": user,","        \"commented_at\": date_time.strftime(\"%Y-%m-%d %H:%M:%S.%f\"),","        \"comment_content\": reply.content","    }","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_ykVj7Z:165","==fb_post.utils.get_replies_to_comment:22","    date_time = reply.commented_at","    user = {","        \"user_id\": reply.commented_by_id,","        \"name\": reply.commented_by.name,","        \"profile_pic\": reply.commented_by.profile_pic","    }","fb_post/exceptions.py:1: [R0801(duplicate-code), ] Similar lines in 2 files","==fb_post.utils..~c9_invoke_BqRQTu:113","==fb_post.utils.get_post_details:143","        \"comment_id\": comment.id,","        \"commenter\": get_user_dict(comment.commented_by),","        \"commented_at\": commented_time,","        \"comment_content\": comment.content,","        \"reactions\": {","            \"count\": len(comment.reactions.all()),"],"id":2},{"start":{"row":1,"column":35},"end":{"row":17,"column":124},"action":"insert","lines":["6: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/get_post_details.py:148: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/get_post_details.py:62: [W2207(max-for-block-size), get_post_details_dict] Too many statements in for block (5/4)","fb_post/utils/get_post_details.py:99: [W2207(max-for-block-size), get_comment_dict_with_all_details] Too many statements in for block (7/4)","fb_post/utils/get_post_details.py:124: [R1702(too-many-nested-blocks), add_reply_details_dict_to_replies_list] Too many nested blocks (3/2)","fb_post/utils/get_post_details.py:126: [W0612(unused-variable), add_reply_details_dict_to_replies_list] Unused variable 'reaction_dict'","************* Module fb_post.utils.post_predictions","fb_post/utils/post_predictions.py:23: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/post_predictions.py:25: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/post_predictions.py:4: [C0411(wrong-import-order), ] first party import \"from fb_post.constants import PositiveReactions, NegativeReactions\" should be placed before \"from .validation import check_for_post, check_for_user\"","************* Module fb_post.utils.react_to_post","fb_post/utils/react_to_post.py:7: [W0717(too-many-try-statements), react_to_post] try clause contains 3 statements, expected at most 2","fb_post/utils/react_to_post.py:3: [W0611(unused-import), ] Unused is_valid_reaction_type imported from validation","************* Module fb_post/constants","fb_post/constants.py:1: [C0103(invalid-name), ] Module name \"fb_post/constants\" doesn't conform to snake_case naming style","************* Module fb_post/exceptions","fb_post/exceptions.py:1: [C0103(invalid-name), ] Module name \"fb_post/exceptions\" doesn't conform to snake_case naming style"]},{"start":{"row":20,"column":28},"end":{"row":20,"column":32},"action":"remove","lines":["4.37"]},{"start":{"row":20,"column":28},"end":{"row":20,"column":32},"action":"insert","lines":["9.55"]},{"start":{"row":20,"column":51},"end":{"row":20,"column":65},"action":"remove","lines":["2.73/10, +1.64"]},{"start":{"row":20,"column":51},"end":{"row":20,"column":65},"action":"insert","lines":["9.26/10, +0.29"]}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":36},"action":"remove","lines":["66"],"id":3,"ignore":true},{"start":{"row":1,"column":34},"end":{"row":1,"column":37},"action":"insert","lines":["138"]},{"start":{"row":2,"column":36},"end":{"row":2,"column":37},"action":"remove","lines":["8"]},{"start":{"row":2,"column":36},"end":{"row":2,"column":37},"action":"insert","lines":["6"]},{"start":{"row":2,"column":40},"end":{"row":2,"column":41},"action":"remove","lines":["C"]},{"start":{"row":2,"column":40},"end":{"row":2,"column":41},"action":"insert","lines":["W"]},{"start":{"row":2,"column":43},"end":{"row":2,"column":44},"action":"remove","lines":["0"]},{"start":{"row":2,"column":43},"end":{"row":2,"column":44},"action":"insert","lines":["1"]},{"start":{"row":2,"column":46},"end":{"row":2,"column":56},"action":"remove","lines":["line-too-l"]},{"start":{"row":2,"column":46},"end":{"row":2,"column":59},"action":"insert","lines":["bad-indentati"]},{"start":{"row":2,"column":61},"end":{"row":2,"column":62},"action":"remove","lines":["g"]},{"start":{"row":2,"column":66},"end":{"row":3,"column":127},"action":"remove","lines":["Line too long (80/79)","fb_post/utils/get_post_details.py:62: [W2207(max-for-block-size), get_post_details_dict] Too many statements in for block (5/4)"]},{"start":{"row":2,"column":66},"end":{"row":2,"column":110},"action":"insert","lines":["Bad indentation. Found 12 spaces, expected 8"]},{"start":{"row":3,"column":34},"end":{"row":3,"column":36},"action":"remove","lines":["99"]},{"start":{"row":3,"column":34},"end":{"row":3,"column":37},"action":"insert","lines":["147"]},{"start":{"row":3,"column":41},"end":{"row":3,"column":93},"action":"remove","lines":["2207(max-for-block-size), get_comment_dict_with_all_"]},{"start":{"row":3,"column":41},"end":{"row":3,"column":72},"action":"insert","lines":["0311(bad-indentation), ] Bad in"]},{"start":{"row":3,"column":74},"end":{"row":3,"column":75},"action":"insert","lines":["n"]},{"start":{"row":3,"column":77},"end":{"row":3,"column":120},"action":"remove","lines":["ils] Too many statements in for block (7/4)"]},{"start":{"row":3,"column":77},"end":{"row":3,"column":111},"action":"insert","lines":["tion. Found 16 spaces, expected 12"]},{"start":{"row":4,"column":35},"end":{"row":4,"column":37},"action":"remove","lines":["24"]},{"start":{"row":4,"column":35},"end":{"row":4,"column":37},"action":"insert","lines":["18"]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["fb_post/utils/get_post_details.py:126: [W0612(unused-variable), add_reply_details_dict_to_replies_list] Unused variable 'reaction_dict'",""]},{"start":{"row":8,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["fb_post/utils/post_predictions.py:4: [C0411(wrong-import-order), ] first party import \"from fb_post.constants import PositiveReactions, NegativeReactions\" should be placed before \"from .validation import check_for_post, check_for_user\"","************* Module fb_post.utils.react_to_post","fb_post/utils/react_to_post.py:7: [W0717(too-many-try-statements), react_to_post] try clause contains 3 statements, expected at most 2","fb_post/utils/react_to_post.py:3: [W0611(unused-import), ] Unused is_valid_reaction_type imported from validation",""]},{"start":{"row":14,"column":30},"end":{"row":14,"column":32},"action":"remove","lines":["55"]},{"start":{"row":14,"column":30},"end":{"row":14,"column":32},"action":"insert","lines":["72"]},{"start":{"row":14,"column":53},"end":{"row":14,"column":55},"action":"remove","lines":["26"]},{"start":{"row":14,"column":53},"end":{"row":14,"column":55},"action":"insert","lines":["71"]},{"start":{"row":14,"column":63},"end":{"row":14,"column":65},"action":"remove","lines":["29"]},{"start":{"row":14,"column":63},"end":{"row":14,"column":65},"action":"insert","lines":["01"]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["************* Module fb_post.utils.get_post_details","fb_post/utils/get_post_details.py:138: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/get_post_details.py:146: [W0311(bad-indentation), ] Bad indentation. Found 12 spaces, expected 8","fb_post/utils/get_post_details.py:147: [W0311(bad-indentation), ] Bad indentation. Found 16 spaces, expected 12","fb_post/utils/get_post_details.py:118: [R1702(too-many-nested-blocks), add_reply_details_dict_to_replies_list] Too many nested blocks (3/2)","************* Module fb_post.utils.post_predictions","fb_post/utils/post_predictions.py:23: [C0301(line-too-long), ] Line too long (80/79)","fb_post/utils/post_predictions.py:25: [C0301(line-too-long), ] Line too long (80/79)",""],"id":4,"ignore":true},{"start":{"row":6,"column":30},"end":{"row":6,"column":32},"action":"remove","lines":["72"]},{"start":{"row":6,"column":30},"end":{"row":6,"column":32},"action":"insert","lines":["93"]},{"start":{"row":6,"column":54},"end":{"row":6,"column":55},"action":"remove","lines":["1"]},{"start":{"row":6,"column":54},"end":{"row":6,"column":55},"action":"insert","lines":["8"]},{"start":{"row":6,"column":63},"end":{"row":6,"column":64},"action":"remove","lines":["0"]},{"start":{"row":6,"column":64},"end":{"row":6,"column":65},"action":"insert","lines":["5"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":136.70588235284933,"selection":{"start":{"row":3,"column":124},"end":{"row":3,"column":124},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1588054609000,"hash":"af0f8f4191de75cae4f9f2e781e5893fda51766a"}