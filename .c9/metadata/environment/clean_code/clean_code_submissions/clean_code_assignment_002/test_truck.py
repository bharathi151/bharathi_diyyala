{"filter":false,"title":"test_truck.py","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_002/test_truck.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":430,"column":4},"end":{"row":431,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":509},{"start":{"row":430,"column":0},"end":{"row":430,"column":4},"action":"remove","lines":["    "]},{"start":{"row":429,"column":12},"end":{"row":430,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":448,"column":4},"end":{"row":449,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":510},{"start":{"row":448,"column":0},"end":{"row":448,"column":4},"action":"remove","lines":["    "]},{"start":{"row":447,"column":12},"end":{"row":448,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":467,"column":0},"end":{"row":468,"column":27},"action":"remove","lines":["    from car import Car","    from truck import Truck"],"id":511},{"start":{"row":466,"column":12},"end":{"row":467,"column":0},"action":"remove","lines":["",""]},{"start":{"row":466,"column":11},"end":{"row":466,"column":12},"action":"remove","lines":["e"]}],[{"start":{"row":466,"column":11},"end":{"row":466,"column":12},"action":"insert","lines":["e"],"id":512}],[{"start":{"row":483,"column":4},"end":{"row":484,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":513},{"start":{"row":483,"column":0},"end":{"row":483,"column":4},"action":"remove","lines":["    "]},{"start":{"row":482,"column":12},"end":{"row":483,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":500,"column":4},"end":{"row":501,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":514}],[{"start":{"row":522,"column":4},"end":{"row":523,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":515},{"start":{"row":522,"column":0},"end":{"row":522,"column":4},"action":"remove","lines":["    "]},{"start":{"row":521,"column":12},"end":{"row":522,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":531,"column":4},"end":{"row":532,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":516},{"start":{"row":531,"column":0},"end":{"row":531,"column":4},"action":"remove","lines":["    "]},{"start":{"row":530,"column":12},"end":{"row":531,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":540,"column":4},"end":{"row":541,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":517},{"start":{"row":540,"column":0},"end":{"row":540,"column":4},"action":"remove","lines":["    "]},{"start":{"row":539,"column":12},"end":{"row":540,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":549,"column":4},"end":{"row":550,"column":27},"action":"remove","lines":["from car import Car","    from truck import Truck"],"id":518},{"start":{"row":549,"column":0},"end":{"row":549,"column":4},"action":"remove","lines":["    "]},{"start":{"row":548,"column":12},"end":{"row":549,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":19},"action":"remove","lines":["from car import Car"],"id":519},{"start":{"row":0,"column":13},"end":{"row":1,"column":0},"action":"remove","lines":["",""]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"remove","lines":["t"]}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["t"],"id":520}],[{"start":{"row":186,"column":65},"end":{"row":187,"column":0},"action":"insert","lines":["",""],"id":521},{"start":{"row":187,"column":0},"end":{"row":187,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":187,"column":4},"end":{"row":187,"column":8},"action":"insert","lines":["    "],"id":522}],[{"start":{"row":187,"column":8},"end":{"row":187,"column":12},"action":"insert","lines":["    "],"id":523}],[{"start":{"row":187,"column":12},"end":{"row":187,"column":16},"action":"insert","lines":["    "],"id":524}],[{"start":{"row":187,"column":16},"end":{"row":187,"column":20},"action":"insert","lines":["    "],"id":525}],[{"start":{"row":187,"column":20},"end":{"row":187,"column":24},"action":"insert","lines":["    "],"id":526}],[{"start":{"row":187,"column":24},"end":{"row":187,"column":28},"action":"insert","lines":["    "],"id":527}],[{"start":{"row":187,"column":28},"end":{"row":187,"column":32},"action":"insert","lines":["    "],"id":528}],[{"start":{"row":187,"column":32},"end":{"row":187,"column":36},"action":"insert","lines":["    "],"id":529}],[{"start":{"row":187,"column":36},"end":{"row":187,"column":40},"action":"insert","lines":["    "],"id":530}],[{"start":{"row":187,"column":40},"end":{"row":187,"column":44},"action":"insert","lines":["    "],"id":531}],[{"start":{"row":187,"column":44},"end":{"row":187,"column":48},"action":"insert","lines":["    "],"id":532}],[{"start":{"row":187,"column":44},"end":{"row":187,"column":48},"action":"remove","lines":["    "],"id":533},{"start":{"row":187,"column":40},"end":{"row":187,"column":44},"action":"remove","lines":["    "]},{"start":{"row":187,"column":36},"end":{"row":187,"column":40},"action":"remove","lines":["    "]},{"start":{"row":187,"column":32},"end":{"row":187,"column":36},"action":"remove","lines":["    "]},{"start":{"row":187,"column":28},"end":{"row":187,"column":32},"action":"remove","lines":["    "]},{"start":{"row":187,"column":24},"end":{"row":187,"column":28},"action":"remove","lines":["    "]},{"start":{"row":187,"column":20},"end":{"row":187,"column":24},"action":"remove","lines":["    "]},{"start":{"row":187,"column":16},"end":{"row":187,"column":20},"action":"remove","lines":["    "]},{"start":{"row":187,"column":12},"end":{"row":187,"column":16},"action":"remove","lines":["    "]},{"start":{"row":187,"column":8},"end":{"row":187,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":187,"column":4},"end":{"row":187,"column":8},"action":"remove","lines":["    "],"id":534},{"start":{"row":187,"column":0},"end":{"row":187,"column":4},"action":"remove","lines":["    "]},{"start":{"row":186,"column":65},"end":{"row":187,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":186,"column":71},"end":{"row":187,"column":0},"action":"insert","lines":["",""],"id":535}],[{"start":{"row":187,"column":0},"end":{"row":187,"column":4},"action":"insert","lines":["    "],"id":536}],[{"start":{"row":187,"column":4},"end":{"row":187,"column":8},"action":"insert","lines":["    "],"id":537}],[{"start":{"row":187,"column":8},"end":{"row":187,"column":12},"action":"insert","lines":["    "],"id":538}],[{"start":{"row":187,"column":12},"end":{"row":187,"column":16},"action":"insert","lines":["    "],"id":539}],[{"start":{"row":187,"column":16},"end":{"row":187,"column":20},"action":"insert","lines":["    "],"id":540}],[{"start":{"row":187,"column":20},"end":{"row":187,"column":24},"action":"insert","lines":["    "],"id":541}],[{"start":{"row":187,"column":24},"end":{"row":187,"column":28},"action":"insert","lines":["    "],"id":542}],[{"start":{"row":187,"column":28},"end":{"row":187,"column":32},"action":"insert","lines":["    "],"id":543}],[{"start":{"row":187,"column":32},"end":{"row":187,"column":36},"action":"insert","lines":["    "],"id":544}],[{"start":{"row":187,"column":36},"end":{"row":187,"column":40},"action":"insert","lines":["    "],"id":545}],[{"start":{"row":187,"column":40},"end":{"row":187,"column":44},"action":"insert","lines":["    "],"id":546}],[{"start":{"row":187,"column":44},"end":{"row":187,"column":48},"action":"insert","lines":["    "],"id":547}],[{"start":{"row":187,"column":48},"end":{"row":187,"column":52},"action":"insert","lines":["    "],"id":548}],[{"start":{"row":187,"column":52},"end":{"row":187,"column":56},"action":"insert","lines":["    "],"id":549}],[{"start":{"row":187,"column":56},"end":{"row":187,"column":60},"action":"insert","lines":["    "],"id":550}],[{"start":{"row":187,"column":60},"end":{"row":187,"column":64},"action":"insert","lines":["    "],"id":551}],[{"start":{"row":187,"column":64},"end":{"row":187,"column":68},"action":"insert","lines":["    "],"id":552}],[{"start":{"row":187,"column":64},"end":{"row":187,"column":68},"action":"remove","lines":["    "],"id":553}],[{"start":{"row":187,"column":64},"end":{"row":187,"column":65},"action":"insert","lines":[" "],"id":554}],[{"start":{"row":187,"column":75},"end":{"row":188,"column":0},"action":"insert","lines":["",""],"id":555},{"start":{"row":188,"column":0},"end":{"row":188,"column":65},"action":"insert","lines":["                                                                 "]}],[{"start":{"row":188,"column":78},"end":{"row":189,"column":0},"action":"insert","lines":["",""],"id":556},{"start":{"row":189,"column":0},"end":{"row":189,"column":65},"action":"insert","lines":["                                                                 "]}],[{"start":{"row":189,"column":79},"end":{"row":190,"column":0},"action":"insert","lines":["",""],"id":557},{"start":{"row":190,"column":0},"end":{"row":190,"column":65},"action":"insert","lines":["                                                                 "]}],[{"start":{"row":190,"column":82},"end":{"row":191,"column":0},"action":"insert","lines":["",""],"id":558},{"start":{"row":191,"column":0},"end":{"row":191,"column":65},"action":"insert","lines":["                                                                 "]}],[{"start":{"row":212,"column":4},"end":{"row":212,"column":5},"action":"remove","lines":[" "],"id":559},{"start":{"row":212,"column":0},"end":{"row":212,"column":4},"action":"remove","lines":["    "]},{"start":{"row":211,"column":63},"end":{"row":212,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":211,"column":69},"end":{"row":212,"column":0},"action":"insert","lines":["",""],"id":560}],[{"start":{"row":212,"column":0},"end":{"row":212,"column":4},"action":"insert","lines":["    "],"id":561}],[{"start":{"row":212,"column":4},"end":{"row":212,"column":8},"action":"insert","lines":["    "],"id":562}],[{"start":{"row":212,"column":8},"end":{"row":212,"column":12},"action":"insert","lines":["    "],"id":563}],[{"start":{"row":212,"column":12},"end":{"row":212,"column":16},"action":"insert","lines":["    "],"id":564}],[{"start":{"row":212,"column":16},"end":{"row":212,"column":20},"action":"insert","lines":["    "],"id":565}],[{"start":{"row":212,"column":20},"end":{"row":212,"column":24},"action":"insert","lines":["    "],"id":566}],[{"start":{"row":212,"column":24},"end":{"row":212,"column":28},"action":"insert","lines":["    "],"id":567}],[{"start":{"row":212,"column":28},"end":{"row":212,"column":32},"action":"insert","lines":["    "],"id":568}],[{"start":{"row":212,"column":32},"end":{"row":212,"column":36},"action":"insert","lines":["    "],"id":569}],[{"start":{"row":212,"column":36},"end":{"row":212,"column":40},"action":"insert","lines":["    "],"id":570}],[{"start":{"row":212,"column":40},"end":{"row":212,"column":44},"action":"insert","lines":["    "],"id":571}],[{"start":{"row":212,"column":44},"end":{"row":212,"column":48},"action":"insert","lines":["    "],"id":572}],[{"start":{"row":212,"column":48},"end":{"row":212,"column":52},"action":"insert","lines":["    "],"id":573}],[{"start":{"row":212,"column":52},"end":{"row":212,"column":56},"action":"insert","lines":["    "],"id":574}],[{"start":{"row":212,"column":56},"end":{"row":212,"column":60},"action":"insert","lines":["    "],"id":575}],[{"start":{"row":212,"column":60},"end":{"row":212,"column":64},"action":"insert","lines":["    "],"id":576}],[{"start":{"row":212,"column":60},"end":{"row":212,"column":64},"action":"remove","lines":["    "],"id":577}],[{"start":{"row":212,"column":60},"end":{"row":212,"column":61},"action":"insert","lines":[" "],"id":578},{"start":{"row":212,"column":61},"end":{"row":212,"column":62},"action":"insert","lines":[" "]},{"start":{"row":212,"column":62},"end":{"row":212,"column":63},"action":"insert","lines":[" "]}],[{"start":{"row":212,"column":73},"end":{"row":213,"column":0},"action":"insert","lines":["",""],"id":579},{"start":{"row":213,"column":0},"end":{"row":213,"column":63},"action":"insert","lines":["                                                               "]}],[{"start":{"row":213,"column":76},"end":{"row":214,"column":0},"action":"insert","lines":["",""],"id":580},{"start":{"row":214,"column":0},"end":{"row":214,"column":63},"action":"insert","lines":["                                                               "]}],[{"start":{"row":214,"column":77},"end":{"row":215,"column":0},"action":"insert","lines":["",""],"id":581},{"start":{"row":215,"column":0},"end":{"row":215,"column":63},"action":"insert","lines":["                                                               "]}],[{"start":{"row":215,"column":80},"end":{"row":216,"column":0},"action":"insert","lines":["",""],"id":582},{"start":{"row":216,"column":0},"end":{"row":216,"column":63},"action":"insert","lines":["                                                               "]}],[{"start":{"row":0,"column":0},"end":{"row":142,"column":0},"action":"remove","lines":["import pytest","from truck import Truck","","","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",-100,10,3,50),(\"red\",0,10,3,50)])","def test_object_creation_with_invalid_max_speed_raise_value_error(color,","                                                                  max_speed,","                                                                  acceleration,","                                                                  tyre_friction,","                                                                  max_cargo_weight):","    #arrange","    error = \"Invalid value for max_speed\"","    #act","    with pytest.raises(ValueError) as error_exception:","        assert Truck(color=color,max_speed=max_speed,","                     acceleration=acceleration,","                     tyre_friction=tyre_friction,","                     max_cargo_weight = max_cargo_weight)","    #assert","    assert max_speed <= 0","    assert str(error_exception.value) == error","    ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",100,-10,3,50),(\"red\",100,0,3,50)])","def test_object_creation_with_invalid_acceleration_raise_value_error(color,","                                                                     max_speed,","                                                                     acceleration,","                                                                     tyre_friction,","                                                                     max_cargo_weight):","    #arrange","    error = \"Invalid value for acceleration\"","    #act","    with pytest.raises(ValueError) as error_exception:","        assert Truck(color=color,max_speed=max_speed,","                     acceleration=acceleration,","                     tyre_friction=tyre_friction,","                     max_cargo_weight = max_cargo_weight)","    #assert","    assert acceleration <= 0","    assert str(error_exception.value) == error","    ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",100,10,-3,50),(\"red\",100,10,0,50)])","def test_object_creation_with_invalid_tyre_friction_raise_value_error(color,","                                                                      max_speed,","                                                                      acceleration,","                                                                      tyre_friction,","                                                                      max_cargo_weight):","    #arrange","    error = \"Invalid value for tyre_friction\"","    #act","    with pytest.raises(ValueError) as error_exception:","        assert Truck(color = color,max_speed = max_speed,","                     acceleration = acceleration,","                     tyre_friction = tyre_friction,","                     max_cargo_weight = max_cargo_weight)","    #assert","    assert tyre_friction <= 0","    assert str(error_exception.value) == error ","    ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",100,10,3,-5),(\"red\",100,10,3,0)])","def test_object_creation_with_invalid_cargo_weight_raise_value_error(color,","                                                                     max_speed,","                                                                     acceleration,","                                                                     tyre_friction,","                                                                     max_cargo_weight):","    #arrange","    error = \"Invalid value for cargo_weight\"","    #act","    with pytest.raises(ValueError) as error_exception:","        assert Truck(color=color,max_speed=max_speed,","                     acceleration=acceleration,","                     tyre_friction=tyre_friction,","                     max_cargo_weight=max_cargo_weight)","    #assert","    assert max_cargo_weight <= 0","    assert str(error_exception.value) == error  ","    ","    ","    ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",2,1,1,1)])","def test_object_creation_with_valid_details_rerurn_truck_object(color,","                                                                max_speed,","                                                                acceleration,","                                                                tyre_friction,","                                                                max_cargo_weight):","    #arrange ","    ","    #act","    truck = Truck(color = color,max_speed = max_speed,","                  acceleration = acceleration,","                  tyre_friction = tyre_friction,","                  max_cargo_weight = max_cargo_weight)","    ","    #assert","    assert isinstance(truck,Truck)","    assert truck.max_speed == max_speed","    assert truck.tyre_friction == tyre_friction","    assert truck.acceleration == acceleration","    assert truck.is_engine_started == False","    assert truck.current_speed == 0","    assert truck.max_cargo_weight == max_cargo_weight","    assert truck.max_speed>truck.acceleration","    assert truck.max_speed>truck.current_speed","    assert truck.cargo_weight == 0","","   ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",2,1,1,1),(\"red\",2,1,1,1)])","def test_multiple_objects_creation_with_valid_details_return_truck_objects(color,","                                                                           max_speed,","                                                                           acceleration,","                                                                           tyre_friction,","                                                                           max_cargo_weight):","    #arrange ","    ","    #act","    truck = Truck(color = color,max_speed = max_speed,","                  acceleration = acceleration,","                  tyre_friction = tyre_friction,","                  max_cargo_weight = max_cargo_weight)","    ","    #assert","    assert isinstance(truck,Truck)","    assert truck.max_speed == max_speed","    assert truck.tyre_friction == tyre_friction","    assert truck.acceleration == acceleration","    assert truck.is_engine_started == False","    assert truck.current_speed == 0","    assert truck.max_cargo_weight == max_cargo_weight","    assert truck.max_speed>truck.acceleration","    assert truck.max_speed>truck.current_speed","    assert truck.cargo_weight == 0",""],"id":583}],[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["import pytest","from truck import Truck","",""],"id":584}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["import pytest","from truck import Truck","","","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",2,1,1,1)])","def test_start_engine_first_time_returns_is_engine_true(color,","                                                        max_speed,","                                                        acceleration,","                                                        tyre_friction,","                                                        max_cargo_weight):","    #arrange","    truck = Truck(color = color,max_speed = max_speed,","                  acceleration = acceleration,","                  tyre_friction = tyre_friction,","                  max_cargo_weight = max_cargo_weight)","    #act","    truck.start_engine()","    #assert","    assert truck.is_engine_started == True","    assert truck.cargo_weight == 0","","   ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",100,10,3,50)])","def test_current_speed_when_start_engine_called_twice_return_is_engine_started_true(color,","                                                                                    max_speed,","                                                                                    acceleration,","                                                                                    tyre_friction,","                                                                                    max_cargo_weight):","    #arrange","    truck =  Truck(color = color,max_speed = max_speed,","                   acceleration = acceleration,","                   tyre_friction = tyre_friction,","                   max_cargo_weight = max_cargo_weight)","    #act","    truck.start_engine()","    truck.start_engine()","    #assert ","    assert truck.is_engine_started == True","    assert truck.cargo_weight == 0",""],"id":585}],[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["import pytest","from truck import Truck","",""],"id":586}],[{"start":{"row":4,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",100,10,3,50)])","def test_sound_horn_when_truck_engine_is_not_started_return_warn(color,","                                                                 max_speed,","                                                                 acceleration,","                                                                 tyre_friction,","                                                                 max_cargo_weight,","                                                                 capsys):","    #arrange","    truck =  Truck(color = color,max_speed = max_speed,","                   acceleration = acceleration,","                   tyre_friction = tyre_friction,","                   max_cargo_weight = max_cargo_weight)","    ","    warn = \"Start the engine to sound_horn\\n\"","    #act","    truck.sound_horn()","    captured  =  capsys.readouterr()","    ","    #assert","    assert truck.is_engine_started == False","    assert captured.out == warn","    assert truck.cargo_weight == 0","    ","@pytest.mark.parametrize(","    \"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",","    [(\"red\",100,10,3,50)])","def test_sound_horn_when_truck_engine_is_started_returns_sound(color,","                                                               max_speed,","                                                               acceleration,","                                                               tyre_friction,","                                                               max_cargo_weight,","                                                               capsys):","    #arrange","    truck = Truck(color = color,max_speed = max_speed,","    acceleration = acceleration,tyre_friction = tyre_friction,max_cargo_weight = max_cargo_weight)","    horn = \"Honk Honk\\n\"","    truck.start_engine()","    #act","    ","    truck.sound_horn()","    captured  =  capsys.readouterr()","    #assert","    assert truck.is_engine_started == True","    assert captured.out == horn","    assert truck.cargo_weight == 0",""],"id":587}],[{"start":{"row":4,"column":4},"end":{"row":5,"column":0},"action":"remove","lines":["",""],"id":588},{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":19,"column":0},"end":{"row":42,"column":34},"action":"remove","lines":["def test_stop_engine_when_truck_is_not_running_returns_is_engine_started_false():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 10,max_cargo_weight = 50)","    #act","    truck.stop_engine()","    ","    #assert","    assert truck.is_engine_started == False","    assert truck.cargo_weight == 0","    ","    ","def test_stop_engine_when_truck_is_running_returns_is_engine_started_false():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 10,max_cargo_weight = 50)","    truck.start_engine()","    ","    #act","    ","    ","    truck.stop_engine()","    ","    #assert","    assert truck.is_engine_started == False","    assert truck.cargo_weight == 0"],"id":589}],[{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"remove","lines":["",""],"id":590},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["",""]},{"start":{"row":21,"column":4},"end":{"row":22,"column":0},"action":"remove","lines":["",""]},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"remove","lines":["    "]},{"start":{"row":20,"column":3},"end":{"row":21,"column":0},"action":"remove","lines":["",""]},{"start":{"row":20,"column":2},"end":{"row":20,"column":3},"action":"remove","lines":[" "]},{"start":{"row":20,"column":1},"end":{"row":20,"column":2},"action":"remove","lines":[" "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":1},"action":"remove","lines":[" "]},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["",""]},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":591}],[{"start":{"row":7,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["def test_accelerate_before_engine_starts_returns_error(color,max_speed,acceleration,tyre_friction,max_cargo_weight,capsys):","    #arrange","    truck =  Truck(color = color,max_speed = max_speed,acceleration = acceleration,tyre_friction = tyre_friction,max_cargo_weight = max_cargo_weight)","    ","    warn = \"Start the engine to accelerate\\n\"","    #act","    truck.accelerate()","    captured  =  capsys.readouterr()","    #assert","    assert captured.out == warn","    assert truck.cargo_weight == 0",""],"id":592}],[{"start":{"row":4,"column":1},"end":{"row":7,"column":0},"action":"remove","lines":["pytest.mark.parametrize(\"color,max_speed,acceleration,tyre_friction,max_cargo_weight\",[","    (\"red\",100,10,3,50)","])   ",""],"id":593},{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["@"]},{"start":{"row":3,"column":4},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":3,"column":4},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":594},{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":17,"column":0},"end":{"row":65,"column":0},"action":"remove","lines":["def test_acceleration_when_engine_started_curent_speed_less_than_max_speed_returns_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 10","    truck.start_engine()","    ","    #act","    ","    truck.accelerate()","    ","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0","    ","    ","def test_acceleration_when_current_speed_more_than_max_speed_return_max_speed_as_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 11,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 20","    truck.start_engine()","    truck.accelerate()","    ","    #act","    ","    truck.accelerate()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0","    ","    ","    ","","def test_accelerate_when_current_speed_equal_to_max_limit_returns_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 20","    truck.start_engine()","    truck.accelerate()","    speed_at_accelerate = truck.current_speed","    #act","    ","    truck.accelerate()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0",""],"id":595}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""],"id":596},{"start":{"row":16,"column":4},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":16,"column":4},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":597},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":4,"column":0},"end":{"row":61,"column":0},"action":"remove","lines":["def test_apply_breaks_before_engine_starts_zero_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 10,max_cargo_weight = 50)","    zero_current_speed = 0","    #act","    truck.apply_brakes()","    ","    #assert","    assert truck.is_engine_started == False","    assert truck.current_speed == zero_current_speed","    assert truck.cargo_weight == 0","","","def test_apply_brakes_when_tyre_friction_more_than_current_speed_return_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 0","    truck.start_engine()","    ","    #act","    ","    truck.apply_brakes()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0","    ","    ","def test_apply_brakes_when_tyre_friction_less_than_current_speed_return_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 7","    truck.start_engine()","    truck.accelerate()","","    #act","    ","    truck.apply_brakes()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0    ","    ","    ","def test_apply_brakes_when_tyre_friction_equal_current_speed_returns_zero_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 3,max_cargo_weight = 50)","    zero_current_speed = 0","    truck.start_engine()","    truck.accelerate()","    #act","","    truck.apply_brakes()","    #assert","    ","    assert truck.current_speed == zero_current_speed  ","    assert truck.cargo_weight == 0    ",""],"id":598}],[{"start":{"row":4,"column":0},"end":{"row":61,"column":0},"action":"insert","lines":["def test_apply_breaks_before_engine_starts_zero_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 10,max_cargo_weight = 50)","    zero_current_speed = 0","    #act","    truck.apply_brakes()","    ","    #assert","    assert truck.is_engine_started == False","    assert truck.current_speed == zero_current_speed","    assert truck.cargo_weight == 0","","","def test_apply_brakes_when_tyre_friction_more_than_current_speed_return_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 0","    truck.start_engine()","    ","    #act","    ","    truck.apply_brakes()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0","    ","    ","def test_apply_brakes_when_tyre_friction_less_than_current_speed_return_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 7","    truck.start_engine()","    truck.accelerate()","","    #act","    ","    truck.apply_brakes()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0    ","    ","    ","def test_apply_brakes_when_tyre_friction_equal_current_speed_returns_zero_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 3,max_cargo_weight = 50)","    zero_current_speed = 0","    truck.start_engine()","    truck.accelerate()","    #act","","    truck.apply_brakes()","    #assert","    ","    assert truck.current_speed == zero_current_speed  ","    assert truck.cargo_weight == 0    ",""],"id":599}],[{"start":{"row":4,"column":0},"end":{"row":61,"column":4},"action":"remove","lines":["def test_apply_breaks_before_engine_starts_zero_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 10,max_cargo_weight = 50)","    zero_current_speed = 0","    #act","    truck.apply_brakes()","    ","    #assert","    assert truck.is_engine_started == False","    assert truck.current_speed == zero_current_speed","    assert truck.cargo_weight == 0","","","def test_apply_brakes_when_tyre_friction_more_than_current_speed_return_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 0","    truck.start_engine()","    ","    #act","    ","    truck.apply_brakes()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0","    ","    ","def test_apply_brakes_when_tyre_friction_less_than_current_speed_return_updated_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 10,tyre_friction = 3,max_cargo_weight = 50)","    updated_current_speed = 7","    truck.start_engine()","    truck.accelerate()","","    #act","    ","    truck.apply_brakes()","    #assert","    assert truck.is_engine_started == True","    assert truck.current_speed == updated_current_speed","    assert truck.cargo_weight == 0    ","    ","    ","def test_apply_brakes_when_tyre_friction_equal_current_speed_returns_zero_current_speed():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 3,tyre_friction = 3,max_cargo_weight = 50)","    zero_current_speed = 0","    truck.start_engine()","    truck.accelerate()","    #act","","    truck.apply_brakes()","    #assert","    ","    assert truck.current_speed == zero_current_speed  ","    assert truck.cargo_weight == 0    ","    "],"id":601},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"remove","lines":[" "],"id":602}],[{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"remove","lines":[" "],"id":603}],[{"start":{"row":17,"column":31},"end":{"row":17,"column":32},"action":"insert","lines":[" "],"id":604}],[{"start":{"row":17,"column":30},"end":{"row":17,"column":31},"action":"insert","lines":[" "],"id":605}],[{"start":{"row":1,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["from truck import Truck","","","def test_load_when_truck_is_in_motion_raises_warn(capsys):","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.load(30)","    truck.start_engine()","    truck.accelerate()","    warn = \"Cannot load cargo during motion\\n\"","    #act","    ","    truck.load(20)","    captured = capsys.readouterr()","    #assert","    ","    assert truck.current_speed > 0","    assert captured.out == warn","    assert truck.cargo_weight <= truck.max_cargo_weight","    assert truck.cargo_weight == 30","    ","def test_load_when_load_is_more_than_max_limit_raises_warn(capsys):","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.start_engine()","    warn = \"Cannot load cargo more than max limit: 50\\n\"","    load = 70","    #act","    ","    truck.load(load)","    captured  =  capsys.readouterr()","    #assert","    assert truck.current_speed == 0","    assert captured.out == warn","    assert load >= truck.max_cargo_weight","    assert truck.cargo_weight == 0","","def test_load_when_truck_is_not_motion_returns_loaded_weight(capsys):","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.start_engine()","    ","    ","    #act","    ","    truck.load(50)","    ","    #assert","    ","    assert truck.current_speed == 0","    assert truck.cargo_weight <= truck.max_cargo_weight","    assert truck.cargo_weight == 50",""],"id":606}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":23},"action":"insert","lines":["from truck import Truck"],"id":607}],[{"start":{"row":1,"column":0},"end":{"row":73,"column":0},"action":"remove","lines":["from truck import Truck  ","  ","  ","def test_unload_when_truck_is_in_motion_raises_warn(capsys):","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.load(50)","    truck.start_engine()","    truck.accelerate()","    warn = \"Cannot unload cargo during motion\\n\"","    #act","    ","    truck.unload(20)","    captured  =  capsys.readouterr()","    #assert","    ","    assert truck.current_speed>0","    assert captured.out == warn","    assert truck.cargo_weight <= truck.max_cargo_weight","    assert truck.cargo_weight == 50","    ","def test_unload_when_load_is_more_than_max_limit_raises_warn(capsys):","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.start_engine()","    warn = \"Cannot unload cargo more than max limit: 50\\n\"","    truck.load(50)","    load = 70","    #act","    ","    truck.unload(load)","    captured  =  capsys.readouterr()","    #assert","","","    assert captured.out == warn","    assert load >= truck.max_cargo_weight","    ","    assert truck.cargo_weight == 50","","def test_unload_total_load_when_truck_is_not_motion_returns_remaining_load_weight():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.start_engine()","    truck.load(50)","    load = 50","    #act","    ","    truck.unload(load)","    ","    #assert","    ","    assert truck.current_speed == 0","    assert truck.cargo_weight <= truck.max_cargo_weight","    assert truck.cargo_weight == 0","    assert load <= truck.max_cargo_weight","def test_unload_when_truck_is_not_motion_returns_remaining_load_weight():","    #arrange","    truck = Truck(color = \"red\",max_speed = 20,acceleration = 4,tyre_friction = 3,max_cargo_weight = 50)","    truck.start_engine()","    truck.load(50)","    load = 40","    #act","    ","    truck.unload(load)","    ","    #assert","    ","    assert truck.current_speed == 0","    assert truck.cargo_weight <= truck.max_cargo_weight","    assert truck.cargo_weight == 10","    assert load <= truck.max_cargo_weight",""],"id":608}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":23},"action":"insert","lines":["from truck import Truck"],"id":609}],[{"start":{"row":1,"column":23},"end":{"row":1,"column":25},"action":"remove","lines":["  "],"id":610},{"start":{"row":1,"column":23},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":158.8796576727489,"scrollleft":0,"selection":{"start":{"row":20,"column":8},"end":{"row":20,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":8,"state":"start","mode":"ace/mode/python"}},"timestamp":1587553898777,"hash":"e085b99249d0448bd765b061ee7bcfa345031246"}