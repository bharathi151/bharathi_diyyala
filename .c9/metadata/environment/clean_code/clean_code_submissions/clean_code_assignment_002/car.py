{"filter":false,"title":"car.py","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_002/car.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["class Car:","    _horn_sound = \"Beep Beep\"","","    def __init__(self, max_speed, acceleration, tyre_friction, color=None):","        is_valid_value(max_speed, \"max_speed\")","        is_valid_value(acceleration, \"acceleration\")","        is_valid_value(tyre_friction, \"tyre_friction\")","        self._color, self._max_speed = color, max_speed","        self._acceleration, self._tyre_friction = acceleration, tyre_friction","        self._is_engine_started = False","        self._current_speed = 0","","    @property","    def current_speed(self):","        return self._current_speed","","    @property","    def max_speed(self):","        return self._max_speed","","    @property","    def is_engine_started(self):","        return self._is_engine_started","","    @property","    def acceleration(self):","        return self._acceleration","","    @property","    def tyre_friction(self):","        return self._tyre_friction","","    @property","    def color(self):","        return self._color","","    def start_engine(self):","        self._is_engine_started = True","","    def stop_engine(self):","        if self._is_engine_started:","            self._is_engine_started = False","","    def accelerate(self):","        if self._is_engine_started:","            self._current_speed = self._current_speed + self._acceleration ","        else: print(\"Start the engine to accelerate\")","        if self._current_speed > self._max_speed:","            self._current_speed = self._max_speed","","    def apply_brakes(self):","        if self._current_speed >= self._tyre_friction:","            self._current_speed -= self._tyre_friction","        else:","            self._current_speed = 0","","    def sound_horn(self):","        if self._is_engine_started: ","            print(f'{self._horn_sound}')","        else: ","            print(\"Start the engine to sound_horn\")","","def is_valid_value(value, name_of_the_value):","    if value <= 0:","        raise ValueError(\"Invalid value for \" + name_of_the_value)",""],"id":4}],[{"start":{"row":59,"column":13},"end":{"row":59,"column":14},"action":"remove","lines":[" "],"id":5}],[{"start":{"row":57,"column":35},"end":{"row":57,"column":36},"action":"remove","lines":[" "],"id":6}],[{"start":{"row":45,"column":74},"end":{"row":45,"column":75},"action":"remove","lines":[" "],"id":7}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587536912677,"hash":"7930220ea7f9385a2e1f0b26a326228284cbacb0"}