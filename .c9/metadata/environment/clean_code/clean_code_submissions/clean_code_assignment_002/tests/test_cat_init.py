{"filter":false,"title":"test_cat_init.py","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_002/tests/test_cat_init.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["import pytest","from car import Car","","","@pytest.mark.parametrize(","    \"color, max_speed, acceleration, tyre_friction\",","    [(\"red\", -100, 10, 3), (\"red\", 0, 10, 3)])","def test_object_creation_with_invalid_max_speed_raise_value_error(","     color, max_speed, acceleration, tyre_friction):","    # arrange","    error = \"Invalid value for max_speed\"","","    # act","    with pytest.raises(ValueError) as error_exception:","        assert Car(color=color, max_speed=max_speed,","                   acceleration=acceleration,","                   tyre_friction=tyre_friction)","","    # assert","    assert max_speed <= 0","    assert str(error_exception.value) == error","","","@pytest.mark.parametrize(","    \"color, max_speed, acceleration, tyre_friction\",","    [(\"red\", 100, -10, 3), (\"red\", 100, 0, 3)])","def test_object_creation_with_invalid_acceleration_raise_value_error(","     color, max_speed, acceleration, tyre_friction):","    # arrange","    error = \"Invalid value for acceleration\"","","    # act","    with pytest.raises(ValueError) as error_exception:","        assert Car(color=color, max_speed=max_speed,","                   acceleration=acceleration,","                   tyre_friction=tyre_friction)","","    # assert","    assert acceleration <= 0","    assert str(error_exception.value) == error","","","@pytest.mark.parametrize(","    \"color, max_speed, acceleration, tyre_friction\",","    [(\"red\", 100, 10, -3), (\"red\", 100, 10, 0)])","def test_object_creation_with_invalid_tyre_friction_raise_value_error(","     color, max_speed, acceleration, tyre_friction):","    # arrange","    error = \"Invalid value for tyre_friction\"","","    # act","    with pytest.raises(ValueError) as error_exception:","        assert Car(color=color, max_speed=max_speed,","                   acceleration=acceleration,","                   tyre_friction=tyre_friction)","","    # assert","    assert tyre_friction <= 0","    assert str(error_exception.value) == error","","","@pytest.mark.parametrize(","    \"color, max_speed, acceleration, tyre_friction\",","    [(\"red\", 2, 1, 1)])","def test_object_creation_with_valid_details_rerurn_car_object(","     color, max_speed, acceleration, tyre_friction):","    # arrange","    false = False","","    # act","    car = Car(color=color, max_speed=max_speed,","              acceleration=acceleration,","              tyre_friction=tyre_friction)","","    # assert","    assert type(car) == Car","    assert car.max_speed == max_speed","    assert car.tyre_friction == tyre_friction","    assert car.acceleration == acceleration","    assert car.is_engine_started == false","    assert car.current_speed == 0","    assert car.max_speed > car.acceleration","","","@pytest.mark.parametrize(","    \"color, max_speed, acceleration, tyre_friction\",","    [(\"red\", 2, 1, 1), (\"red\", 3, 1, 1)])","def test_multiple_objects_creation_with_valid_details_return_car_objects(","     color, max_speed, acceleration, tyre_friction):","    # arrange","    false = False","","    # act","    car = Car(color=color, max_speed=max_speed,","              acceleration=acceleration,","              tyre_friction=tyre_friction)","","    # assert","    assert type(car) == Car","    assert car.max_speed == max_speed","    assert car.tyre_friction == tyre_friction","    assert car.acceleration == acceleration","    assert car.is_engine_started == false","    assert car.current_speed == 0","    assert car.max_speed > car.acceleration",""],"id":1}]]},"ace":{"folds":[],"scrolltop":1201,"scrollleft":0,"selection":{"start":{"row":105,"column":0},"end":{"row":105,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":69,"state":"start","mode":"ace/mode/python"}},"timestamp":1587535614536,"hash":"a99e162ab45cd38d84b20fca990fafbc1f58b40f"}