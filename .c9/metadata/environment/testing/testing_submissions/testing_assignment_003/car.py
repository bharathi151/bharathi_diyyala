{"filter":false,"title":"car.py","tooltip":"/testing/testing_submissions/testing_assignment_003/car.py","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["class Car:","    _horn_sound=\"Beep Beep\"","    def __init__(self,max_speed,acceleration,tyre_friction,color=None):","        ","        ","        error(max_speed,\"max_speed\")","        error(acceleration,\"acceleration\")","        error(tyre_friction,\"tyre_friction\")","        self._color,self._max_speed,self._acceleration,self._tyre_friction=acceleration=color,max_speed,acceleration,tyre_friction","        self._is_engine_started,self._current_speed=False,0","    @property","    def current_speed(self):return self._current_speed","    @property","    def max_speed(self):return self._max_speed","    @property","    def is_engine_started(self):return self._is_engine_started","    @property","    def acceleration(self):return self._acceleration","    @property","    def tyre_friction(self):return self._tyre_friction","    @property","    def color(self):return self._color","    def start_engine(self):self._is_engine_started=True","    def stop_engine(self):","        if self._is_engine_started:","            self._is_engine_started=False","    def accelerate(self):","        if self._is_engine_started:","            self._current_speed=self._current_speed+self._acceleration ","            over_speed=self._current_speed>self._acceleration","            if over_speed:","                self._current_speed=self._max_speed","        else:print(\"Start the engine to accelerate\")","    def apply_brakes(self):","        ","        eligible_speed=self._current_speed>=self._tyre_friction","        ","        if eligible_speed:","            self._current_speed-=self._tyre_friction","        else:","            self._current_speed=0","    def sound_horn(self):","        if self._is_engine_started:print(f'{self._horn_sound}')","        else:print(\"Start the engine to sound_horn\")","        ","def error(value,string):","    negative=value<=0","    if negative:raise ValueError(\"Invalid value for \"+string)   ",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["class Car:","    _horn_sound=\"Beep Beep\"","    def __init__(self,max_speed,acceleration,tyre_friction,color=None):","        ","        ","        error(max_speed,\"max_speed\")","        error(acceleration,\"acceleration\")","        error(tyre_friction,\"tyre_friction\")","        self._color,self._max_speed,self._acceleration,self._tyre_friction=acceleration=color,max_speed,acceleration,tyre_friction","        self._is_engine_started,self._current_speed=False,0","    @property","    def current_speed(self):return self._current_speed","    @property","    def max_speed(self):return self._max_speed","    @property","    def is_engine_started(self):return self._is_engine_started","    @property","    def acceleration(self):return self._acceleration","    @property","    def tyre_friction(self):return self._tyre_friction","    @property","    def color(self):return self._color","    def start_engine(self):self._is_engine_started=True","    def stop_engine(self):","        if self._is_engine_started:","            self._is_engine_started=False","    def accelerate(self):","        if self._is_engine_started:","            self._current_speed=self._current_speed+self._acceleration ","            ","            if self._current_speed>self._acceleration:","                self._current_speed=self._max_speed","        else:print(\"Start the engine to accelerate\")","    def apply_brakes(self):","        ","        eligible_speed=self._current_speed>=self._tyre_friction","        ","        if eligible_speed:","            self._current_speed-=self._tyre_friction","        else:","            self._current_speed=0","    def sound_horn(self):","        if self._is_engine_started:print(f'{self._horn_sound}')","        else:print(\"Start the engine to sound_horn\")","        ","def error(value,string):","    zero=0","    if value<=zero:raise ValueError(\"Invalid value for \"+string)   ",""],"id":4}],[{"start":{"row":30,"column":52},"end":{"row":30,"column":53},"action":"remove","lines":["n"],"id":5},{"start":{"row":30,"column":51},"end":{"row":30,"column":52},"action":"remove","lines":["o"]},{"start":{"row":30,"column":50},"end":{"row":30,"column":51},"action":"remove","lines":["i"]},{"start":{"row":30,"column":49},"end":{"row":30,"column":50},"action":"remove","lines":["t"]},{"start":{"row":30,"column":48},"end":{"row":30,"column":49},"action":"remove","lines":["a"]},{"start":{"row":30,"column":47},"end":{"row":30,"column":48},"action":"remove","lines":["r"]},{"start":{"row":30,"column":46},"end":{"row":30,"column":47},"action":"remove","lines":["e"]},{"start":{"row":30,"column":45},"end":{"row":30,"column":46},"action":"remove","lines":["l"]},{"start":{"row":30,"column":44},"end":{"row":30,"column":45},"action":"remove","lines":["e"]},{"start":{"row":30,"column":43},"end":{"row":30,"column":44},"action":"remove","lines":["c"]},{"start":{"row":30,"column":42},"end":{"row":30,"column":43},"action":"remove","lines":["c"]},{"start":{"row":30,"column":41},"end":{"row":30,"column":42},"action":"remove","lines":["a"]}],[{"start":{"row":30,"column":41},"end":{"row":30,"column":42},"action":"insert","lines":["m"],"id":6},{"start":{"row":30,"column":42},"end":{"row":30,"column":43},"action":"insert","lines":["a"]},{"start":{"row":30,"column":43},"end":{"row":30,"column":44},"action":"insert","lines":["x"]}],[{"start":{"row":30,"column":40},"end":{"row":30,"column":44},"action":"remove","lines":["_max"],"id":7},{"start":{"row":30,"column":40},"end":{"row":30,"column":50},"action":"insert","lines":["_max_speed"]}],[{"start":{"row":8,"column":86},"end":{"row":8,"column":87},"action":"remove","lines":["n"],"id":8},{"start":{"row":8,"column":85},"end":{"row":8,"column":86},"action":"remove","lines":["o"]},{"start":{"row":8,"column":84},"end":{"row":8,"column":85},"action":"remove","lines":["i"]},{"start":{"row":8,"column":83},"end":{"row":8,"column":84},"action":"remove","lines":["t"]},{"start":{"row":8,"column":82},"end":{"row":8,"column":83},"action":"remove","lines":["a"]},{"start":{"row":8,"column":81},"end":{"row":8,"column":82},"action":"remove","lines":["r"]},{"start":{"row":8,"column":80},"end":{"row":8,"column":81},"action":"remove","lines":["e"]},{"start":{"row":8,"column":79},"end":{"row":8,"column":80},"action":"remove","lines":["l"]},{"start":{"row":8,"column":78},"end":{"row":8,"column":79},"action":"remove","lines":["e"]},{"start":{"row":8,"column":77},"end":{"row":8,"column":78},"action":"remove","lines":["c"]},{"start":{"row":8,"column":76},"end":{"row":8,"column":77},"action":"remove","lines":["c"]},{"start":{"row":8,"column":75},"end":{"row":8,"column":76},"action":"remove","lines":["a"]},{"start":{"row":8,"column":74},"end":{"row":8,"column":75},"action":"remove","lines":["="]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":268,"selection":{"start":{"row":8,"column":74},"end":{"row":8,"column":74},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587465856591,"hash":"9a5b71cc3408859c8efcdacaa2b8daa7f1ba1fb2"}