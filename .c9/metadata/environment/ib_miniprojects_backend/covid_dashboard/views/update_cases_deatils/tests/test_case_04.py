{"filter":false,"title":"test_case_04.py","tooltip":"/ib_miniprojects_backend/covid_dashboard/views/update_cases_deatils/tests/test_case_04.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":58,"column":41},"action":"insert","lines":["\"\"\"","Raise exception when invalid cases details given","\"\"\"","","from django_swagger_utils.utils.test import CustomAPITestCase","from . import APP_NAME, OPERATION_NAME, REQUEST_METHOD, URL_SUFFIX","from covid_dashboard.factories import *","from covid_dashboard.models.cases_details import CasesDetails","","REQUEST_BODY = \"\"\"","{","    \"confirmed_cases\": 1,","    \"deaths\": 1,","    \"recovered_cases\": 1","}","\"\"\"","","TEST_CASE = {","    \"request\": {","        \"path_params\": {\"mandal_id\": \"1\"},","        \"query_params\": {\"date\": \"2020-5-30\"},","        \"header_params\": {},","        \"securities\": {\"oauth\": {\"tokenUrl\": \"http://auth.ibtspl.com/oauth2/\", \"flow\": \"password\", \"scopes\": [\"superuser\"], \"type\": \"oauth2\"}},","        \"body\": REQUEST_BODY,","    },","}","","","class TestCase04PostCasesDeatilsAPITestCase(CustomAPITestCase):","    app_name = APP_NAME","    operation_name = OPERATION_NAME","    request_method = REQUEST_METHOD","    url_suffix = URL_SUFFIX","    test_case_dict = TEST_CASE","    mandal_id = int(TEST_CASE[\"request\"][\"path_params\"][\"mandal_id\"])","    date = TEST_CASE[\"request\"][\"query_params\"][\"date\"]","    import json","    request_body_dict = json.loads(REQUEST_BODY)","    confirmed_cases = request_body_dict[\"confirmed_cases\"]","    recovered_cases = request_body_dict[\"recovered_cases\"]","    deaths = request_body_dict[\"deaths\"]","    ","","    def setupUser(self, username, password):","        super(TestCase04PostCasesDeatilsAPITestCase, self).setupUser(","            username=username, password=password","        )","        mandal = MandalFactory()","","","    def test_case(self):","        response = self.default_test_case()","        import json","        response_content = json.loads(response.content)","","        #response_content = json.loads(response.content)","        # Returns response object.","        # Which can be used for further response object checks.","        # Add database state checks here."],"id":1}],[{"start":{"row":28,"column":16},"end":{"row":28,"column":20},"action":"remove","lines":["Post"],"id":2},{"start":{"row":28,"column":16},"end":{"row":28,"column":22},"action":"insert","lines":["Update"]},{"start":{"row":44,"column":24},"end":{"row":44,"column":28},"action":"remove","lines":["Post"]},{"start":{"row":44,"column":24},"end":{"row":44,"column":30},"action":"insert","lines":["Update"]}],[{"start":{"row":47,"column":32},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":48,"column":0},"end":{"row":48,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":48,"column":8},"end":{"row":53,"column":9},"action":"insert","lines":["CasesDetailsFactory.create(","            mandal=mandal, date=self.date, ","            confirmed_cases=5,","            recovered_cases=2,","            deaths=1","        )"],"id":4}]]},"ace":{"folds":[],"scrolltop":495,"scrollleft":0,"selection":{"start":{"row":53,"column":9},"end":{"row":53,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":23,"state":"start","mode":"ace/mode/python"}},"timestamp":1594355376245,"hash":"674dc7842fc01679f7f9d541539f8599e9fcaf8a"}