{"filter":false,"title":"user_deatils_interactor.py","tooltip":"/ib_miniprojects_backend/gyaan/interactors/user_deatils_interactor.py","undoManager":{"mark":22,"position":22,"stack":[[{"start":{"row":0,"column":0},"end":{"row":149,"column":0},"action":"insert","lines":["from typing import List","from .storages.storage_interface import StorageInterface","from .presenters.presenter_interface import PresenterInterface","from food_management.interactors.storages.dtos import *","","class InvalidMealId(Exception):","    pass","","class InvalidItems(Exception):","    def __init__(self, invalid_items_ids: List[int]):","        self.invalid_items_ids = invalid_items_ids","","class InvalidMealItems(Exception):","    def __init__(self, invalid_items_ids: List[int]):","        self.invalid_items_ids = invalid_items_ids","","class DuplicateMealItems(Exception):","    def __init__(self, duplicate_items_ids: List[int]):","        self.duplicate_items_ids = duplicate_items_ids","","class NegativeQuantityItems(Exception):","    def __init__(self, negative_quantities_items: NegativeQuantityItemsDto):","        self.negative_quantities_items = negative_quantities_items","","class CreateUserPreferedmealInteractor:","    def __init__(self, storage: StorageInterface):","        self.storage = storage","","    def create_user_preference_meal_wrapper(self, ","                           presenter: PresenterInterface,","                           meal_id: int,","                           user_id: int,","                           datetime: str,","                           items_quantities_dto: PreferedItemsQuantitiesDto):","        self.presenter = presenter","        try:","           person_meal_id = self.create_user_preference_meal(","                meal_id=meal_id,","                user_id=user_id,","                datetime=datetime,","                items_quantities_dto=items_quantities_dto","            )","        except InvalidMealId:","            return self.presenter.raise_invalid_meal_id_exception()","        except InvalidItems as error:","            return self.presenter.raise_invalid_items_exception(error)","        except InvalidMealItems as error:","            return self.presenter.raise_invalid_meal_items_exception(error)","        except DuplicateMealItems as error:","            return self.presenter.raise_duplicate_meal_items_exception(error)","        except NegativeQuantityItems as error:","            self.presenter.raise_negative_quantity_items_exception(error)","","        return self.presenter.create_user_preference_meal_response(","                person_meal_id=person_meal_id","            )","","    def create_user_preference_meal(self,","                           meal_id: int,","                           datetime: str,","                           user_id: int,","                           items_quantities_dto: PreferedItemsQuantitiesDto):","","        is_invalid_meal_id = not self.storage.is_valid_meal_id(meal_id=meal_id)","        if is_invalid_meal_id:","            raise InvalidMealId","","        invalid_items_ids = self.storage.get_invalid_item_ids(","            items_quantities_dto=items_quantities_dto","        )","        if invalid_items_ids:","            raise InvalidItems(invalid_items_ids=invalid_items_ids)","","        meal_items = self.storage.get_meal_items_list(","            meal_id=meal_id,","            datetime=datetime)","        invalid_meal_items_ids = self.\\","            _get_invalid_items_ids_in_user_prefered_items(","                items_quantities_dto=items_quantities_dto,","                meal_items=meal_items)","        if invalid_meal_items_ids:","            raise InvalidMealItems(invalid_items_ids=invalid_meal_items_ids)","","        duplicate_items_ids = self.\\","            _get_duplicate_items_ids_in_user_prefered_items(","                items_quantities_dto=items_quantities_dto)","        if duplicate_items_ids:","            raise DuplicateMealItems(duplicate_items_ids=duplicate_items_ids)","","        negative_quantities_items = self.\\","            _get_negative_quantity_items_in_user_prefered_items_dto(","                items_quantities_dto=items_quantities_dto)","        if negative_quantities_items:","            raise NegativeQuantityItems(negative_quantities_items=negative_quantities_items)","","        is_user_meal_already_existed = self.storage. \\","                is_meal_already_existed(datetime=datetime, meal_id=meal_id, user_id=user_id)","        if is_user_meal_already_existed:","            person_meal_id= self.storage.updatetime_user_preference_meal(","                meal_id=meal_id,","                datetime=datetime,","                user_id=user_id,","                items_quantities_dto=items_quantities_dto","            )","            return person_meal_id","","        person_meal_id= self.storage.create_user_preference_meal(","            meal_id=meal_id,","            datetime=datetime,","            user_id=user_id,","            items_quantities_dto=items_quantities_dto","        )","","        return person_meal_id","","    def _get_invalid_items_ids_in_user_prefered_items(","                self, items_quantities_dto, meal_items):","        invalid_items_ids = [item.item_id","             for item in items_quantities_dto.items_quantities","                if item.item_id not in meal_items","            ]","        return list(set(invalid_items_ids))","","    def _get_duplicate_items_ids_in_user_prefered_items(","                self, items_quantities_dto):","        items_ids = [item.item_id","             for item in items_quantities_dto.items_quantities","             ]","        duplicate_items_ids = [item_id","            for item_id in items_ids","                if items_ids.count(item_id) > 1","            ]","        return list(set(duplicate_items_ids))","","    def _get_negative_quantity_items_in_user_prefered_items_dto(","                self, items_quantities_dto):","        negative_quantities_items = []","        for item in items_quantities_dto.items_quantities:","            if item.quantity < 0:","                negative_quantities_items.append(","                    ItemDto(","                        item_id=item.item_id,","                        quantity=item.quantity","                    )","                )","        negative_quantities_items_dto = NegativeQuantityItemsDto(","            negative_quantities_items=negative_quantities_items ","        )","        return negative_quantities_items_dto",""],"id":1}],[{"start":{"row":43,"column":8},"end":{"row":43,"column":12},"action":"remove","lines":["    "],"id":2}],[{"start":{"row":43,"column":8},"end":{"row":43,"column":12},"action":"insert","lines":["    "],"id":3}],[{"start":{"row":32,"column":27},"end":{"row":33,"column":75},"action":"remove","lines":["datetime: str,","                           items_quantities_dto: PreferedItemsQuantitiesDto"],"id":6},{"start":{"row":32,"column":26},"end":{"row":32,"column":27},"action":"remove","lines":[" "]},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"remove","lines":[" "]},{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"remove","lines":[" "]},{"start":{"row":32,"column":20},"end":{"row":32,"column":24},"action":"remove","lines":["    "]},{"start":{"row":32,"column":16},"end":{"row":32,"column":20},"action":"remove","lines":["    "]},{"start":{"row":32,"column":12},"end":{"row":32,"column":16},"action":"remove","lines":["    "]},{"start":{"row":32,"column":8},"end":{"row":32,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":32,"column":4},"end":{"row":32,"column":8},"action":"remove","lines":["    "],"id":7},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"remove","lines":["    "]},{"start":{"row":31,"column":40},"end":{"row":32,"column":0},"action":"remove","lines":["",""]},{"start":{"row":31,"column":39},"end":{"row":31,"column":40},"action":"remove","lines":[","]}],[{"start":{"row":37,"column":16},"end":{"row":38,"column":57},"action":"remove","lines":["datetime=datetime,","                items_quantities_dto=items_quantities_dto"],"id":8},{"start":{"row":37,"column":12},"end":{"row":37,"column":16},"action":"remove","lines":["    "]},{"start":{"row":37,"column":8},"end":{"row":37,"column":12},"action":"remove","lines":["    "]},{"start":{"row":37,"column":4},"end":{"row":37,"column":8},"action":"remove","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"remove","lines":["    "]},{"start":{"row":36,"column":32},"end":{"row":37,"column":0},"action":"remove","lines":["",""]},{"start":{"row":36,"column":31},"end":{"row":36,"column":32},"action":"remove","lines":[","]}],[{"start":{"row":42,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["        except InvalidMealItems as error:","            return self.presenter.raise_invalid_meal_items_exception(error)","        except DuplicateMealItems as error:","            return self.presenter.raise_duplicate_meal_items_exception(error)","        except NegativeQuantityItems as error:","            self.presenter.raise_negative_quantity_items_exception(error)",""],"id":9},{"start":{"row":41,"column":70},"end":{"row":42,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":41,"column":70},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":42,"column":0},"end":{"row":42,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":42,"column":8},"end":{"row":42,"column":12},"action":"remove","lines":["    "],"id":11},{"start":{"row":42,"column":4},"end":{"row":42,"column":8},"action":"remove","lines":["    "]},{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":41,"column":68},"end":{"row":41,"column":69},"action":"remove","lines":["r"],"id":12},{"start":{"row":41,"column":67},"end":{"row":41,"column":68},"action":"remove","lines":["o"]},{"start":{"row":41,"column":66},"end":{"row":41,"column":67},"action":"remove","lines":["r"]},{"start":{"row":41,"column":65},"end":{"row":41,"column":66},"action":"remove","lines":["r"]},{"start":{"row":41,"column":64},"end":{"row":41,"column":65},"action":"remove","lines":["e"]}],[{"start":{"row":49,"column":27},"end":{"row":49,"column":41},"action":"remove","lines":["datetime: str,"],"id":13},{"start":{"row":49,"column":26},"end":{"row":49,"column":27},"action":"remove","lines":[" "]},{"start":{"row":49,"column":25},"end":{"row":49,"column":26},"action":"remove","lines":[" "]},{"start":{"row":49,"column":24},"end":{"row":49,"column":25},"action":"remove","lines":[" "]},{"start":{"row":49,"column":20},"end":{"row":49,"column":24},"action":"remove","lines":["    "]},{"start":{"row":49,"column":16},"end":{"row":49,"column":20},"action":"remove","lines":["    "]},{"start":{"row":49,"column":12},"end":{"row":49,"column":16},"action":"remove","lines":["    "]},{"start":{"row":49,"column":8},"end":{"row":49,"column":12},"action":"remove","lines":["    "]},{"start":{"row":49,"column":4},"end":{"row":49,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"remove","lines":["    "],"id":14},{"start":{"row":48,"column":40},"end":{"row":49,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":49,"column":39},"end":{"row":50,"column":75},"action":"remove","lines":[",","                           items_quantities_dto: PreferedItemsQuantitiesDto"],"id":15},{"start":{"row":49,"column":38},"end":{"row":49,"column":39},"action":"remove","lines":["t"]}],[{"start":{"row":49,"column":38},"end":{"row":49,"column":39},"action":"insert","lines":["t"],"id":16}],[{"start":{"row":55,"column":7},"end":{"row":137,"column":0},"action":"remove","lines":[" invalid_items_ids = self.storage.get_invalid_item_ids(","            items_quantities_dto=items_quantities_dto","        )","        if invalid_items_ids:","            raise InvalidItems(invalid_items_ids=invalid_items_ids)","","        meal_items = self.storage.get_meal_items_list(","            meal_id=meal_id,","            datetime=datetime)","        invalid_meal_items_ids = self.\\","            _get_invalid_items_ids_in_user_prefered_items(","                items_quantities_dto=items_quantities_dto,","                meal_items=meal_items)","        if invalid_meal_items_ids:","            raise InvalidMealItems(invalid_items_ids=invalid_meal_items_ids)","","        duplicate_items_ids = self.\\","            _get_duplicate_items_ids_in_user_prefered_items(","                items_quantities_dto=items_quantities_dto)","        if duplicate_items_ids:","            raise DuplicateMealItems(duplicate_items_ids=duplicate_items_ids)","","        negative_quantities_items = self.\\","            _get_negative_quantity_items_in_user_prefered_items_dto(","                items_quantities_dto=items_quantities_dto)","        if negative_quantities_items:","            raise NegativeQuantityItems(negative_quantities_items=negative_quantities_items)","","        is_user_meal_already_existed = self.storage. \\","                is_meal_already_existed(datetime=datetime, meal_id=meal_id, user_id=user_id)","        if is_user_meal_already_existed:","            person_meal_id= self.storage.updatetime_user_preference_meal(","                meal_id=meal_id,","                datetime=datetime,","                user_id=user_id,","                items_quantities_dto=items_quantities_dto","            )","            return person_meal_id","","        person_meal_id= self.storage.create_user_preference_meal(","            meal_id=meal_id,","            datetime=datetime,","            user_id=user_id,","            items_quantities_dto=items_quantities_dto","        )","","        return person_meal_id","","    def _get_invalid_items_ids_in_user_prefered_items(","                self, items_quantities_dto, meal_items):","        invalid_items_ids = [item.item_id","             for item in items_quantities_dto.items_quantities","                if item.item_id not in meal_items","            ]","        return list(set(invalid_items_ids))","","    def _get_duplicate_items_ids_in_user_prefered_items(","                self, items_quantities_dto):","        items_ids = [item.item_id","             for item in items_quantities_dto.items_quantities","             ]","        duplicate_items_ids = [item_id","            for item_id in items_ids","                if items_ids.count(item_id) > 1","            ]","        return list(set(duplicate_items_ids))","","    def _get_negative_quantity_items_in_user_prefered_items_dto(","                self, items_quantities_dto):","        negative_quantities_items = []","        for item in items_quantities_dto.items_quantities:","            if item.quantity < 0:","                negative_quantities_items.append(","                    ItemDto(","                        item_id=item.item_id,","                        quantity=item.quantity","                    )","                )","        negative_quantities_items_dto = NegativeQuantityItemsDto(","            negative_quantities_items=negative_quantities_items ","        )","        return negative_quantities_items_dto",""],"id":17},{"start":{"row":55,"column":6},"end":{"row":55,"column":7},"action":"remove","lines":[" "]},{"start":{"row":55,"column":5},"end":{"row":55,"column":6},"action":"remove","lines":[" "]},{"start":{"row":55,"column":4},"end":{"row":55,"column":5},"action":"remove","lines":[" "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":4},"action":"remove","lines":["    "]},{"start":{"row":54,"column":0},"end":{"row":55,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":28,"column":8},"end":{"row":28,"column":35},"action":"remove","lines":["create_user_preference_meal"],"id":18},{"start":{"row":28,"column":8},"end":{"row":28,"column":26},"action":"insert","lines":["get_domain_details"]},{"start":{"row":34,"column":33},"end":{"row":34,"column":60},"action":"remove","lines":["create_user_preference_meal"]},{"start":{"row":34,"column":33},"end":{"row":34,"column":51},"action":"insert","lines":["get_domain_details"]},{"start":{"row":43,"column":30},"end":{"row":43,"column":57},"action":"remove","lines":["create_user_preference_meal"]},{"start":{"row":43,"column":30},"end":{"row":43,"column":48},"action":"insert","lines":["get_domain_details"]},{"start":{"row":47,"column":8},"end":{"row":47,"column":35},"action":"remove","lines":["create_user_preference_meal"]},{"start":{"row":47,"column":8},"end":{"row":47,"column":26},"action":"insert","lines":["get_domain_details"]}],[{"start":{"row":51,"column":46},"end":{"row":51,"column":62},"action":"remove","lines":["is_valid_meal_id"],"id":19},{"start":{"row":51,"column":46},"end":{"row":51,"column":64},"action":"insert","lines":["is_valid_domain_id"]}],[{"start":{"row":30,"column":27},"end":{"row":30,"column":34},"action":"remove","lines":["meal_id"],"id":20},{"start":{"row":30,"column":27},"end":{"row":30,"column":36},"action":"insert","lines":["domain_id"]},{"start":{"row":34,"column":18},"end":{"row":34,"column":25},"action":"remove","lines":["meal_id"]},{"start":{"row":34,"column":18},"end":{"row":34,"column":27},"action":"insert","lines":["domain_id"]},{"start":{"row":35,"column":16},"end":{"row":35,"column":23},"action":"remove","lines":["meal_id"]},{"start":{"row":35,"column":16},"end":{"row":35,"column":25},"action":"insert","lines":["domain_id"]},{"start":{"row":35,"column":26},"end":{"row":35,"column":33},"action":"remove","lines":["meal_id"]},{"start":{"row":35,"column":26},"end":{"row":35,"column":35},"action":"insert","lines":["domain_id"]},{"start":{"row":39,"column":48},"end":{"row":39,"column":55},"action":"remove","lines":["meal_id"]},{"start":{"row":39,"column":48},"end":{"row":39,"column":57},"action":"insert","lines":["domain_id"]},{"start":{"row":44,"column":23},"end":{"row":44,"column":30},"action":"remove","lines":["meal_id"]},{"start":{"row":44,"column":23},"end":{"row":44,"column":32},"action":"insert","lines":["domain_id"]},{"start":{"row":44,"column":40},"end":{"row":44,"column":47},"action":"remove","lines":["meal_id"]},{"start":{"row":44,"column":40},"end":{"row":44,"column":49},"action":"insert","lines":["domain_id"]},{"start":{"row":48,"column":27},"end":{"row":48,"column":34},"action":"remove","lines":["meal_id"]},{"start":{"row":48,"column":27},"end":{"row":48,"column":36},"action":"insert","lines":["domain_id"]},{"start":{"row":51,"column":19},"end":{"row":51,"column":26},"action":"remove","lines":["meal_id"]},{"start":{"row":51,"column":19},"end":{"row":51,"column":28},"action":"insert","lines":["domain_id"]},{"start":{"row":51,"column":67},"end":{"row":51,"column":74},"action":"remove","lines":["meal_id"]},{"start":{"row":51,"column":67},"end":{"row":51,"column":76},"action":"insert","lines":["domain_id"]},{"start":{"row":51,"column":77},"end":{"row":51,"column":84},"action":"remove","lines":["meal_id"]},{"start":{"row":51,"column":77},"end":{"row":51,"column":86},"action":"insert","lines":["domain_id"]},{"start":{"row":52,"column":22},"end":{"row":52,"column":29},"action":"remove","lines":["meal_id"]},{"start":{"row":52,"column":22},"end":{"row":52,"column":31},"action":"insert","lines":["domain_id"]}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":19},"action":"remove","lines":["InvalidMealId"],"id":21},{"start":{"row":5,"column":6},"end":{"row":5,"column":21},"action":"insert","lines":["InvalidDomainId"]},{"start":{"row":38,"column":15},"end":{"row":38,"column":28},"action":"remove","lines":["InvalidMealId"]},{"start":{"row":38,"column":15},"end":{"row":38,"column":30},"action":"insert","lines":["InvalidDomainId"]},{"start":{"row":53,"column":18},"end":{"row":53,"column":31},"action":"remove","lines":["InvalidMealId"]},{"start":{"row":53,"column":18},"end":{"row":53,"column":33},"action":"insert","lines":["InvalidDomainId"]}],[{"start":{"row":40,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["        except InvalidItems as error:","            return self.presenter.raise_invalid_items_exception()",""],"id":22},{"start":{"row":39,"column":69},"end":{"row":40,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":39,"column":69},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":23},{"start":{"row":40,"column":0},"end":{"row":40,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":40,"column":8},"end":{"row":40,"column":12},"action":"remove","lines":["    "],"id":24},{"start":{"row":40,"column":4},"end":{"row":40,"column":8},"action":"remove","lines":["    "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":8,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["class InvalidItems(Exception):","    def __init__(self, invalid_items_ids: List[int]):","        self.invalid_items_ids = invalid_items_ids","","class InvalidMealItems(Exception):","    def __init__(self, invalid_items_ids: List[int]):","        self.invalid_items_ids = invalid_items_ids","","class DuplicateMealItems(Exception):","    def __init__(self, duplicate_items_ids: List[int]):","        self.duplicate_items_ids = duplicate_items_ids","","class NegativeQuantityItems(Exception):","    def __init__(self, negative_quantities_items: NegativeQuantityItemsDto):","        self.negative_quantities_items = negative_quantities_items",""],"id":25},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":90,"scrollleft":0,"selection":{"start":{"row":7,"column":0},"end":{"row":7,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/python"}},"timestamp":1592377244137,"hash":"9d9b2b51e33e1580b620f14cc675e675182b9a39"}